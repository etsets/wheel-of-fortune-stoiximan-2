@using WheelOfFortune.Admin.Models
@using WheelOfFortune.Admin.Additionals
@model PaginatedList<WheelOfFortune.Admin.Models.Voucher>

<p>
    <a asp-action="CouponsList">CouponsList</a>
</p>

<button class="btn-success btn-group-lg" id="createCouponsButton">Create Coupons</button>

<button class="btn-danger btn-group-lg" id="deleteCouponsButton">Delete Coupons</button>

@{
    ViewData["Title"] = "List of Vouchers";
}

<h2>@ViewData["Title"]</h2>

<table class="table">
    <thead>
        <tr>
                <th>
                    Voucher Code
                </th>
                <th>
                   Credit Amount
                </th>
                <th>
                   Is Used
                </th>
                <th>
                    Status
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.VoucherCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreditAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsUsed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="CouponsList"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="CouponsList"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>


@section Scripts {
    @await Html.PartialAsync("_CouponScripts")
}